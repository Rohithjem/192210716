const express = require("express");
const axios = require("axios");

const app = express();
const PORT = 9876;
const WINDOW_SIZE = 10;
let numberWindow = [];

const TYPE_MAP = {
  p: "primes",
  f: "fibo",
  e: "even",
  r: "rand",
};

app.get("/numbers/:numberid", async (req, res) => {
  const { numberid } = req.params;
  const endpoint = TYPE_MAP[numberid];

  if (!endpoint) {
    return res.status(400).json({ error: "Invalid numberid. Use p, f, e, or r only." });
  }

  const url = http://20.244.56.144/evaluation-service/${endpoint};
  const windowPrevState = [...numberWindow];
  let fetchedNumbers = [];

  try {
    const response = await axios.get(url, { timeout: 500 });
    fetchedNumbers = response.data.numbers || [];
  } catch (error) {
    return res.status(500).json({
      error: "Failed to fetch numbers from third-party API (timeout or error).",
    });
  }

  for (let num of fetchedNumbers) {
    if (!numberWindow.includes(num)) {
      numberWindow.push(num);
    }
  }

  while (numberWindow.length > WINDOW_SIZE) {
    numberWindow.shift();
  }

  const avg =
    numberWindow.length === 0
      ? 0
      : parseFloat(
          (numberWindow.reduce((sum, n) => sum + n, 0) / numberWindow.length).toFixed(2)
        );

  res.json({
    windowPrevState,
    windowCurrState: numberWindow,
    numbers: fetchedNumbers,
    avg,
  });
});

app.listen(PORT, () => {
  console.log(Server running at http://localhost:${PORT});
});
